name: Publish Release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      - run: npm run build
        if: ${{ steps.release.outputs.release_created }}
      - run: npm publish --access=public
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Generate SBOM with Trivy
        #if: ${{ steps.release.outputs.release_created }}
        uses: aquasecurity/trivy-action@0.32.0
        with:
          format: 'cyclonedx'
          scan-type: 'fs'
          scan-ref: '.'
          output: 'bom.json'
      - name: Upload SBOM as Artifact
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/upload-artifact@v4
        with:
          name: bom.json
          path: bom.json
          overwrite: true
      - name: Upload SBOM to Dependency Track
        #if: ${{ steps.release.outputs.release_created }}
        uses: OctopusDeploy/upload-sbom-go@v1.1.0
        with:
          dependency-track-url: ${{ secrets.DTRACK_KEY }}
          dependency-track-key: ${{ secrets.DTRACK_URL }}
          project-name: octopus-mcp-server
          #project-version: ${{ steps.release.outputs.version }}
          project-version: v0.2.5
          parent-name: octopus-mcp-server
          is-latest: true
          project-tags: octopus-mcp-server
          sbom-file: "bom.json"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ steps.release.outputs.release_created }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        if: ${{ steps.release.outputs.release_created }}
        with:
          username: octopusdeploy
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: ${{ steps.release.outputs.release_created }}
        with:
          context: .
          push: true
          tags: octopusdeploy/mcp-server:latest,octopusdeploy/mcp-server:${{ steps.release.outputs.tag_name }}
